/*
 JustMath.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
 Released under the Apache License, Version 2.0
 see: https://github.com/dcodeIO/JustMath.js for details
*/
var b={};b.PI=Math.PI;b.SQRT2=Math.SQRT2;b.SQRT1_2=Math.SQRT1_2;b.abs=Math.abs;b.min=Math.min;b.max=Math.max;b.floor=Math.floor;b.ceil=Math.ceil;b.round=Math.round;b.sqrt=Math.sqrt;b.sq=function(a){return a*a};b.pow=Math.pow;b.sin=Math.sin;b.cos=Math.cos;b.tan=Math.tan;b.cot=function(a){return 1/b.tan(a)};b.asin=Math.asin;b.acos=Math.acos;b.atan=Math.atan;b.atan2=Math.atan2;b.random=Math.random;
function c(a,d){this.y=this.x=0;1==arguments.length?(this.x=a.x,this.y=a.y):2==arguments.length&&(this.x=a,this.y=d)}c.prototype.clone=function(){return new c(this)};c.prototype.copy=c.prototype.clone;c.prototype.getX=function(){return this.x};c.prototype.getY=function(){return this.y};c.prototype.getXY=function(){return{x:this.x,y:this.y}};c.prototype.set=function(a,d){if(1==arguments.length){if("object"!=typeof a)throw"Not an object: "+a;this.x=a.x;this.y=a.y}else this.x=a,this.y=d;return this};
c.prototype.add=function(a,d){1==arguments.length?(this.x+=a.x,this.y+=a.y):(this.x+=a,this.y+=d);return this};c.prototype.sub=function(a,d){1==arguments.length?(this.x-=a.x,this.y-=a.y):(this.x-=a,this.y-=d);return this};c.prototype.inv=function(){this.x=-this.x;this.y=-this.y;return this};c.prototype.ort=function(){return this.set(-this.y,this.x)};c.prototype.scale=function(a){this.x*=a;this.y*=a;return this};c.prototype.dot=function(a){return this.x*a.x+this.y*a.y};
c.prototype.norm=function(){var a=b.sqrt(this.dot(this));0!=a&&(this.x/=a,this.y/=a);return this};c.prototype.distSq=function(a){var d=this.x-a.x;a=this.y-a.y;return d*d+a*a};c.prototype.dist=function(a){return b.sqrt(this.distSq(a))};c.prototype.dir=function(){return b.atan2(this.y,this.x)};c.prototype.magSq=function(){return this.dot(this)};c.prototype.mag=function(){return b.sqrt(this.magSq())};
c.prototype.rotate=function(a){var d=b.sin(a);a=b.cos(a);var e=this.x*a-this.y*d;this.y=this.x*d+this.y*a;this.x=e;return this};c.prototype.project=function(a){return this.set(a.clone().scale(this.dot(a)/a.dot(a)))};c.prototype.reject=function(a){return this.sub(this.clone().project(a))};c.prototype.reflect=function(a){a=a.clone().norm();return this.set(a.scale(2*this.dot(a)).sub(this))};
c.prototype.reflectAndScale=function(a,d,e){var f=a.clone().norm();a=a.clone().ort().norm();return this.set(f.scale(this.dot(f)*d).add(a.scale(-this.dot(a)*e)))};c.prototype.lerp=function(a,d){return this.add(a.clone().sub(this).scale(d))};c.prototype.inRect=function(a,d){return(a.x<=this.x&&this.x<=d.x||a.x>=this.x&&this.x>=d.x)&&(a.y<=this.y&&this.y<=d.y||a.y>=this.y&&this.y>=d.y)};c.prototype.equals=function(a){return!a||!(a instanceof c)?!1:this.x==a.x&&this.y==a.y};
c.prototype.toString=function(){return"Vec2("+this.x+"/"+this.y+")"};c.det=function(a,d){return a.x*d.y-d.x*a.y};b.Vec2=c;"undefined"!=typeof module&&module.exports?module.exports=b:"undefined"!=typeof define&&define.amd?define([],function(){return b}):("undefined"==typeof this.dcodeIO&&(this.dcodeIO={}),this.dcodeIO.JustMath=b);
